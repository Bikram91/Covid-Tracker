/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/navbar */ \"./src/scripts/navbar.js\");\n/* harmony import */ var _scripts_chartdata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/chartdata */ \"./src/scripts/chartdata.js\");\n\n\n(0,_scripts_navbar__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\nconst width = 900;\nconst height = 610;\nconst svg = d3.select(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n// Map and projection. Try:  d3.geoAiry() / d3.geoAitoff() / d3.geoArmadillo() / d3.geoAugust() / d3.geoAzimuthalEqualArea() / d3.geoAzimuthalEquidistant() and more\nconst projection = d3.geoMercator().scale(140).translate([width / 2, height / 1.5]);\n\n// Load external data and boot\nlet map_data = d3.json(\"./src/scripts/mapdata.JSON\");\nconst all_data = async ele => {\n  try {\n    let res = await fetch(`./src/scripts/coviddata.JSON`);\n    return await res.json();\n  } catch (err) {\n    console.error(err);\n  }\n};\nlet newArr = new Map();\nasync function color() {\n  let result = await all_data();\n  for (let i = 0; i < result.Countries.length; i++) {\n    let total_cases = result.Countries[i].TotalConfirmed;\n    const countryN = result.Countries[i].Country;\n    if (total_cases < 1000) {\n      total_cases = \"#D8E0BB\";\n    } else if (total_cases < 10000 && total_cases > 1000) {\n      total_cases = \"#b6cec7\";\n    } else if (total_cases < 1000000 && total_cases > 10000) {\n      total_cases = \"#86a3c3\";\n    } else if (total_cases < 10000000 && total_cases > 1000000) {\n      total_cases = \"#7268A6\";\n    } else if (total_cases < 100000000 && total_cases > 10000000) {\n      total_cases = \"#6b3074\";\n    }\n    newArr.set(countryN, total_cases);\n  }\n  newArr;\n}\ncolor().then(() => map_data).then(data => {\n  map_data.then(function (data) {\n    const countries = svg.append(\"g\").selectAll(\"path\").data(data.features).join(\"path\").attr(\"class\", \"map\").attr(\"d\", d3.geoPath().projection(projection)).attr(\"fill\", d => newArr.get(d.properties.name)).append(\"country\").text(d => d.properties.name);\n  });\n});\nconst get_data = async ele => {\n  if (typeof ele === \"undefined\") {\n    return \"\";\n  } else {\n    try {\n      let res = await fetch(`https://api.covid19api.com/country/${ele}?from=2020-03-01T00:00:00Z&to=2022-12-01T00:00:00Z`\n      // `https://api.covid19api.com/total/country/${ele}/status/confirmed?from=2020-03-01T00:00:00Z&to=2022-12-01T00:00:00Z`\n      // `https://api.covid19api.com/live/country/${ele}/status/confirmed/date/2022-09-10T13:13:30Z`\n      );\n\n      return await res.json();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n};\nlet world_map = document.querySelector(\"#my_dataviz\");\nlet countryName = document.querySelector(\"#country-name\");\nlet countryTotalCases = document.querySelector(\"#country-total-cases\");\nlet countryTotalDeaths = document.querySelector(\"#country-total-deaths\");\nlet array_of_active_cases = [];\nlet array_of_date = [];\nlet array_of_deaths_cases = [];\nlet popChart1;\nlet popChart5;\nconst get_data1 = async ele => {\n  if (typeof ele === \"undefined\") {\n    return \"\";\n  } else {\n    try {\n      let res = await fetch(`https://api.covid19api.com/live/country/${ele}/status/confirmed/date/2022-09-10T13:13:30Z`);\n      return await res.json();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n};\nworld_map.addEventListener(\"click\", async e => {\n  e.preventDefault();\n  // array_of_active_cases = [];\n  // array_of_deaths_cases = [];\n  // array_of_date = [];\n  const titleHtml = e.path[0];\n  let dataDiv = document.querySelector(\"#data\");\n  let deathsDiv = document.querySelector(\"#deaths\");\n  let countrynameDiv = document.querySelector(\".country-name\");\n  if (e.target.tagName === \"path\") {\n    const a = titleHtml.querySelector(\"country\");\n    const name_of_country = a.innerHTML;\n    countryName.innerHTML = name_of_country;\n    const data2 = await get_data1(name_of_country);\n    let sum_of_active_cases = 0;\n    let no_of_deaths = 0;\n    for (let i = 0; i < data2.length; i++) {\n      sum_of_active_cases += data2[i].Active;\n      no_of_deaths += data2[i].Deaths;\n    }\n    countryTotalCases.innerHTML = `Total Active Cases: ${sum_of_active_cases}`;\n    countryTotalDeaths.innerHTML = `Total Deaths: ${no_of_deaths}`;\n    const data1 = await get_data(name_of_country);\n    for (let i = 0; i < data1.length - 91; i += 90) {\n      array_of_active_cases.push(data1[i].Confirmed);\n      array_of_date.push(data1[i].Date.slice(0, 10));\n      array_of_deaths_cases.push(data1[i].Deaths);\n    }\n    function chart2() {\n      const chart1Div = document.getElementById(\"chart1\");\n      if (popChart1) {\n        popChart1.destroy();\n      }\n      const chart1Context = chart1Div.getContext(\"2d\");\n      popChart1 = new Chart(chart1Context, {\n        type: \"line\",\n        data: {\n          labels: array_of_date,\n          datasets: [{\n            label: `Total covid cases in ${name_of_country}`,\n            data: array_of_active_cases,\n            backgroundColor: \"rgba(255, 99, 132, 1)\",\n            borderColor: \"rgba(255, 99, 132, 1)\",\n            tension: 0.4\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n    chart2();\n    function chart6() {\n      const abcd5 = document.getElementById(\"chart5\");\n      const abcd51 = abcd5.getContext(\"2d\");\n      if (popChart5) {\n        popChart5.destroy();\n      }\n      popChart5 = new Chart(abcd51, {\n        type: \"line\",\n        data: {\n          labels: array_of_date,\n          datasets: [{\n            label: `Total deaths cases in ${name_of_country}`,\n            data: array_of_deaths_cases,\n            backgroundColor: \"rgba(255, 99, 132, 1)\",\n            borderColor: \"rgba(255, 99, 132, 1)\",\n            tension: 0.4\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n    chart6();\n  }\n});\nconst tooltipDiv = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"width\", \"fit-content\");\nworld_map.addEventListener(\"mouseover\", async e => {\n  e.preventDefault();\n  const [x, y] = d3.pointer(e);\n  const titleHtml = e.path[0];\n  let countrynameDiv = document.querySelector(\".country-name\");\n  if (e.target.tagName === \"path\") {\n    const a = titleHtml.querySelector(\"country\");\n    const name_of_country = a.innerHTML;\n    const data1 = await get_data1(name_of_country);\n    let sum_of_active_cases = 0;\n    let no_of_deaths = 0;\n    for (let i = 0; i < data1.length; i++) {\n      sum_of_active_cases += data1[i].Active;\n      no_of_deaths += data1[i].Deaths;\n    }\n    const tooltipData = `<h4>${name_of_country}</h4>  <p>Active cases: ${sum_of_active_cases}</p><p>Total Deaths: ${no_of_deaths}</p>`;\n    tooltipDiv.transition().duration(200).style(\"opacity\", 0.9);\n    tooltipDiv.html(tooltipData).style(\"left\", x + \"px\").style(\"top\", y + 100 + \"px\");\n  }\n});\nworld_map.addEventListener(\"mouseout\", async e => {\n  tooltipDiv.transition().duration(500).style(\"opacity\", 0);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/chartdata.js":
/*!**********************************!*\
  !*** ./src/scripts/chartdata.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ chart1; }\n/* harmony export */ });\n// import hellodata from \"..\";\n\nfunction chart1() {\n  const myChart = document.getElementById('chart').getContext('2d');\n  const xlabels = [];\n  let popChart = new Chart(myChart, {\n    type: 'bar',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: 'Global Covid Data',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: 'green',\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jaGFydGRhdGEuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUdlLFNBQVNBLE1BQU0sR0FBRTtFQUNoQyxNQUFNQyxPQUFPLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDO0VBQy9ELE1BQU1DLE9BQU8sR0FBRyxFQUFFO0VBRXBCLElBQUlDLFFBQVEsR0FBRyxJQUFJQyxLQUFLLENBQUNOLE9BQU8sRUFBRTtJQUNoQ08sSUFBSSxFQUFFLEtBQUs7SUFDWEMsSUFBSSxFQUFFO01BQ0pDLE1BQU0sRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDO01BQzlEQyxRQUFRLEVBQUUsQ0FBQztRQUNUQyxLQUFLLEVBQUUsbUJBQW1CO1FBQzFCSCxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMxQkksZUFBZSxFQUFDLE9BQU87UUFDdkJDLFdBQVcsRUFBRTtNQUVmLENBQUM7SUFDSCxDQUFDO0lBQ0RDLE9BQU8sRUFBRTtNQUNQQyxNQUFNLEVBQUU7UUFDTkMsQ0FBQyxFQUFFO1VBQ0RDLFdBQVcsRUFBRTtRQUNmO01BQ0Y7SUFDRjtFQUNGLENBQUMsQ0FBQztBQUNGO0FBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nbG9iYWxjb3ZpZHRyYWNrZXIvLi9zcmMvc2NyaXB0cy9jaGFydGRhdGEuanM/YTI1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgaGVsbG9kYXRhIGZyb20gXCIuLlwiO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNoYXJ0MSgpe1xuY29uc3QgbXlDaGFydCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGFydCcpLmdldENvbnRleHQoJzJkJyk7XG4gIGNvbnN0IHhsYWJlbHMgPSBbXTtcblxubGV0IHBvcENoYXJ0ID0gbmV3IENoYXJ0KG15Q2hhcnQsIHtcbiAgdHlwZTogJ2JhcicsXG4gIGRhdGE6IHtcbiAgICBsYWJlbHM6IFsnUmVkJywgJ0JsdWUnLCAnWWVsbG93JywgJ0dyZWVuJywgJ1B1cnBsZScsICdPcmFuZ2UnXSxcbiAgICBkYXRhc2V0czogW3tcbiAgICAgIGxhYmVsOiAnR2xvYmFsIENvdmlkIERhdGEnLFxuICAgICAgZGF0YTogWzEyLCAxOSwgMywgNSwgMiwgM10sXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6J2dyZWVuJyxcbiAgICAgIGJvcmRlcldpZHRoOiAxXG5cbiAgICB9XSxcbiAgfSxcbiAgb3B0aW9uczoge1xuICAgIHNjYWxlczoge1xuICAgICAgeToge1xuICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgfVxufSlcbn07XG4iXSwibmFtZXMiOlsiY2hhcnQxIiwibXlDaGFydCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRDb250ZXh0IiwieGxhYmVscyIsInBvcENoYXJ0IiwiQ2hhcnQiLCJ0eXBlIiwiZGF0YSIsImxhYmVscyIsImRhdGFzZXRzIiwibGFiZWwiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJXaWR0aCIsIm9wdGlvbnMiLCJzY2FsZXMiLCJ5IiwiYmVnaW5BdFplcm8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/chartdata.js\n");

/***/ }),

/***/ "./src/scripts/navbar.js":
/*!*******************************!*\
  !*** ./src/scripts/navbar.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst navSlide = () => {\n  const burger = document.querySelector('.burger');\n  const nav = document.querySelector('.nav-links');\n  const navLinks = document.querySelectorAll('.nav-links li');\n  console.log(navLinks[0].innerHTML);\n  burger.addEventListener('click', () => {\n    // console.log(nav)\n\n    nav.classList.toggle('nav-active');\n    navLinks.forEach((link, index) => {\n      link.style.animation = `navlLinkFade 1.5s ease forwards ${index / 7 + 5}s`;\n    });\n  });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (navSlide);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9uYXZiYXIuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVEsR0FBRyxNQUFNO0VBQ25CLE1BQU1DLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsU0FBUyxDQUFDO0VBQ2hELE1BQU1DLEdBQUcsR0FBR0YsUUFBUSxDQUFDQyxhQUFhLENBQUMsWUFBWSxDQUFDO0VBQ2hELE1BQU1FLFFBQVEsR0FBR0gsUUFBUSxDQUFDSSxnQkFBZ0IsQ0FBQyxlQUFlLENBQUM7RUFDM0RDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUNJLFNBQVMsQ0FBQztFQUVsQ1IsTUFBTSxDQUFDUyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsTUFBTTtJQUNuQzs7SUFFQU4sR0FBRyxDQUFDTyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxZQUFZLENBQUM7SUFDbENQLFFBQVEsQ0FBQ1EsT0FBTyxDQUFDLENBQUNDLElBQUksRUFBRUMsS0FBSyxLQUFLO01BQzlCRCxJQUFJLENBQUNFLEtBQUssQ0FBQ0MsU0FBUyxHQUFJLG1DQUFrQ0YsS0FBSyxHQUFHLENBQUMsR0FBRyxDQUFFLEdBQUU7SUFFOUUsQ0FBQyxDQUFDO0VBQ04sQ0FBQyxDQUFDO0FBQ04sQ0FBQztBQUVELCtEQUFlZixRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2xvYmFsY292aWR0cmFja2VyLy4vc3JjL3NjcmlwdHMvbmF2YmFyLmpzPzM1NzMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbmF2U2xpZGUgPSAoKSA9PiB7XG4gICAgY29uc3QgYnVyZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1cmdlcicpO1xuICAgIGNvbnN0IG5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYXYtbGlua3MnKTtcbiAgICBjb25zdCBuYXZMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5uYXYtbGlua3MgbGknKTtcbiAgICBjb25zb2xlLmxvZyhuYXZMaW5rc1swXS5pbm5lckhUTUwpXG5cbiAgICBidXJnZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKG5hdilcblxuICAgICAgICBuYXYuY2xhc3NMaXN0LnRvZ2dsZSgnbmF2LWFjdGl2ZScpO1xuICAgICAgICBuYXZMaW5rcy5mb3JFYWNoKChsaW5rLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgbGluay5zdHlsZS5hbmltYXRpb24gPSBgbmF2bExpbmtGYWRlIDEuNXMgZWFzZSBmb3J3YXJkcyAke2luZGV4IC8gNyArIDV9c2A7XG4gICAgXG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBuYXZTbGlkZSJdLCJuYW1lcyI6WyJuYXZTbGlkZSIsImJ1cmdlciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIm5hdiIsIm5hdkxpbmtzIiwicXVlcnlTZWxlY3RvckFsbCIsImNvbnNvbGUiLCJsb2ciLCJpbm5lckhUTUwiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiZm9yRWFjaCIsImxpbmsiLCJpbmRleCIsInN0eWxlIiwiYW5pbWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/navbar.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nbG9iYWxjb3ZpZHRyYWNrZXIvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;